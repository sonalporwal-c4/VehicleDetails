// Generated by Dagger (https://dagger.dev).
package com.android.task.domain.interactors;

import com.android.task.domain.repository.VehicleRepositoryInterface;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetVehicleNotesUseCase_Factory implements Factory<GetVehicleNotesUseCase> {
  private final Provider<VehicleRepositoryInterface> vehicleRepositoryInterfaceProvider;

  public GetVehicleNotesUseCase_Factory(
      Provider<VehicleRepositoryInterface> vehicleRepositoryInterfaceProvider) {
    this.vehicleRepositoryInterfaceProvider = vehicleRepositoryInterfaceProvider;
  }

  @Override
  public GetVehicleNotesUseCase get() {
    return newInstance(vehicleRepositoryInterfaceProvider.get());
  }

  public static GetVehicleNotesUseCase_Factory create(
      Provider<VehicleRepositoryInterface> vehicleRepositoryInterfaceProvider) {
    return new GetVehicleNotesUseCase_Factory(vehicleRepositoryInterfaceProvider);
  }

  public static GetVehicleNotesUseCase newInstance(
      VehicleRepositoryInterface vehicleRepositoryInterface) {
    return new GetVehicleNotesUseCase(vehicleRepositoryInterface);
  }
}
