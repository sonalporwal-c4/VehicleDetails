// Generated by view binder compiler. Do not edit!
package com.android.task.vehicle.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.android.task.vehicle.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentVehicleBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView_;

  @NonNull
  public final ErrorLayoutBinding errorLayout;

  @NonNull
  public final ProgressBar loading;

  @NonNull
  public final NotesErrorLayoutBinding notesErrorLayout;

  @NonNull
  public final ProgressBar notesLoading;

  @NonNull
  public final RecyclerView recycler;

  @NonNull
  public final ConstraintLayout rootView;

  private FragmentVehicleBinding(@NonNull ConstraintLayout rootView_,
      @NonNull ErrorLayoutBinding errorLayout, @NonNull ProgressBar loading,
      @NonNull NotesErrorLayoutBinding notesErrorLayout, @NonNull ProgressBar notesLoading,
      @NonNull RecyclerView recycler, @NonNull ConstraintLayout rootView) {
    this.rootView_ = rootView_;
    this.errorLayout = errorLayout;
    this.loading = loading;
    this.notesErrorLayout = notesErrorLayout;
    this.notesLoading = notesLoading;
    this.recycler = recycler;
    this.rootView = rootView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView_;
  }

  @NonNull
  public static FragmentVehicleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentVehicleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_vehicle, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentVehicleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.error_layout;
      View errorLayout = rootView.findViewById(id);
      if (errorLayout == null) {
        break missingId;
      }
      ErrorLayoutBinding binding_errorLayout = ErrorLayoutBinding.bind(errorLayout);

      id = R.id.loading;
      ProgressBar loading = rootView.findViewById(id);
      if (loading == null) {
        break missingId;
      }

      id = R.id.notes_error_layout;
      View notesErrorLayout = rootView.findViewById(id);
      if (notesErrorLayout == null) {
        break missingId;
      }
      NotesErrorLayoutBinding binding_notesErrorLayout = NotesErrorLayoutBinding.bind(notesErrorLayout);

      id = R.id.notes_loading;
      ProgressBar notesLoading = rootView.findViewById(id);
      if (notesLoading == null) {
        break missingId;
      }

      id = R.id.recycler;
      RecyclerView recycler = rootView.findViewById(id);
      if (recycler == null) {
        break missingId;
      }

      ConstraintLayout rootView_ = (ConstraintLayout) rootView;

      return new FragmentVehicleBinding((ConstraintLayout) rootView, binding_errorLayout, loading,
          binding_notesErrorLayout, notesLoading, recycler, rootView_);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
