// Generated by view binder compiler. Do not edit!
package com.android.task.vehicle.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.android.task.vehicle.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentVehicleDetailsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView_;

  @NonNull
  public final ConstraintLayout constraintDetails;

  @NonNull
  public final LinearLayout mainLayout;

  @NonNull
  public final RecyclerView recyclerImages;

  @NonNull
  public final LinearLayout rootView;

  @NonNull
  public final TextView txtColor;

  @NonNull
  public final TextView txtDescription;

  @NonNull
  public final TextView txtFuel;

  @NonNull
  public final TextView txtMake;

  @NonNull
  public final TextView txtMileage;

  @NonNull
  public final TextView txtModel;

  @NonNull
  public final TextView txtPrice;

  private FragmentVehicleDetailsBinding(@NonNull LinearLayout rootView_,
      @NonNull ConstraintLayout constraintDetails, @NonNull LinearLayout mainLayout,
      @NonNull RecyclerView recyclerImages, @NonNull LinearLayout rootView,
      @NonNull TextView txtColor, @NonNull TextView txtDescription, @NonNull TextView txtFuel,
      @NonNull TextView txtMake, @NonNull TextView txtMileage, @NonNull TextView txtModel,
      @NonNull TextView txtPrice) {
    this.rootView_ = rootView_;
    this.constraintDetails = constraintDetails;
    this.mainLayout = mainLayout;
    this.recyclerImages = recyclerImages;
    this.rootView = rootView;
    this.txtColor = txtColor;
    this.txtDescription = txtDescription;
    this.txtFuel = txtFuel;
    this.txtMake = txtMake;
    this.txtMileage = txtMileage;
    this.txtModel = txtModel;
    this.txtPrice = txtPrice;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView_;
  }

  @NonNull
  public static FragmentVehicleDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentVehicleDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_vehicle_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentVehicleDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.constraintDetails;
      ConstraintLayout constraintDetails = rootView.findViewById(id);
      if (constraintDetails == null) {
        break missingId;
      }

      id = R.id.main_layout;
      LinearLayout mainLayout = rootView.findViewById(id);
      if (mainLayout == null) {
        break missingId;
      }

      id = R.id.recyclerImages;
      RecyclerView recyclerImages = rootView.findViewById(id);
      if (recyclerImages == null) {
        break missingId;
      }

      LinearLayout rootView_ = (LinearLayout) rootView;

      id = R.id.txtColor;
      TextView txtColor = rootView.findViewById(id);
      if (txtColor == null) {
        break missingId;
      }

      id = R.id.txtDescription;
      TextView txtDescription = rootView.findViewById(id);
      if (txtDescription == null) {
        break missingId;
      }

      id = R.id.txtFuel;
      TextView txtFuel = rootView.findViewById(id);
      if (txtFuel == null) {
        break missingId;
      }

      id = R.id.txtMake;
      TextView txtMake = rootView.findViewById(id);
      if (txtMake == null) {
        break missingId;
      }

      id = R.id.txtMileage;
      TextView txtMileage = rootView.findViewById(id);
      if (txtMileage == null) {
        break missingId;
      }

      id = R.id.txtModel;
      TextView txtModel = rootView.findViewById(id);
      if (txtModel == null) {
        break missingId;
      }

      id = R.id.txtPrice;
      TextView txtPrice = rootView.findViewById(id);
      if (txtPrice == null) {
        break missingId;
      }

      return new FragmentVehicleDetailsBinding((LinearLayout) rootView, constraintDetails,
          mainLayout, recyclerImages, rootView_, txtColor, txtDescription, txtFuel, txtMake,
          txtMileage, txtModel, txtPrice);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
